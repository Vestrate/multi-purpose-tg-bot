name: Build & Publish

on:
  push:
    branches:
      - master
  release:
    types: [ published ]

jobs:
  build_and_publish:
    name: Build an ASP.NET Core app and push it to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get tag version
      id: get_version
      run: |
        if [ ${GITHUB_EVENT_NAME} -eq "push" ]
        then
          echo "TAG_NAME=${GITHUB_REF_NAME}_${GITHUB_SHA:0:7}" >> $GITHUB_ENV
        else
          echo "TAG_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        fi
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.400
    - name: Build .NET Core App
      run: dotnet publish dotnet-app/APIL/WordCounterBot.APIL.WebApi.csproj -c Release -o ./app
    - name: Build & Publish Docker image
      if: success()
      uses: opspresso/action-docker@v0.4.0
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_NAME: "admiralwoop/multi-purpose-tg-bot"
        LATEST: "true"
        TAG_NAME: ${{ env.TAG_NAME }}
        
  deploy:
    name: Deploy 
    runs-on: ubuntu-latest
    needs: 
      - build_and_publish
    steps:
      - name: Deploy on remote
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd wcb-bot
            docker pull admiralwoop/multi-purpose-tg-bot
            docker-compose up -d